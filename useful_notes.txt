Dynamic variable definition depending on facts:
extra_var: "{{'This is value 1' if ansible_fqdn == 'server.one.example' else 'This is value 2'}}"
--------------------------------------
Using loop with the contents of a file:

tasks:
  - name: Populate public key
    authorized_key:
      user: tomasz
      state: present
      key: "{{ item }}"
    with_file: #this loop over contents of each file, in this case the SSH key
      - /home/tomasz/.ssh/id_rsa.pub
--------------------------------------
One way to enable user to use sudo to become root without a password is to install a file with the approproate directives into /etc/sudoers.d with 0400 permissions:
someuser ALL=(ALL) NOPASSWD:ALL
--------------------------------------
Access hostvars:
ansible Centos1 -m debug -a 'var=hostvars[inventory_hostname].ansible_version.full'
--------------------------------------
hostvars has different content depending if it comes from gathered facts (via playbook) or from an ad_hoc command (when facts were not gathered?):

---
- name: test variables
  hosts: all

  tasks:
    - name: Test group vars
      debug:
        msg:  "The value of the var is {{ ansible_version.full }} and {{inventory_dir}}"

    - name: Test host vars
      debug:
        msg: "This is {{ ansible_date_time.epoch }}"

This can be easily observed when comparing the output of this:

ansible all -m debug -a 'var=hostvars'

and this:

---
- name: test variables
  hosts: all

    - name: Test host vars
      debug:
        msg: "This is {{ hostvars }}"
-----------------------------
Also (verify)

---
- name: test variables
  hosts: all

    - name: Test host vars
      debug:
        var: hostvars.Centos1.ansible_enp0s8.active
